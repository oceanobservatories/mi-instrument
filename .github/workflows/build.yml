name: build
'on':
  push:
    branches:
      - pdm_migration
  pull_request:
    branches:
      - pdm_migration
jobs:
  Build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        shell: bash -l {0}
    env: 
      CONSUL_VERSION: '0.7.4'
      CONSUL_DIR: '$HOME/consul_$CONSUL_VERSION'
      CONSUL_ZIPNAME: 'consul_${CONSUL_VERSION}_linux_amd64.zip'

    steps:
      - name: 'Set up Python 2.7'
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 2.7
      - run: >-
          if [[ ! -f $HOME/consul_0.7.4/consul ]]; then (mkdir -p $HOME/consul_0.7.4 && cd $HOME/consul_0.7.4 && wget https://releases.hashicorp.com/consul/0.7.4/consul_0.7.4_linux_amd64.zip && unzip consul_0.7.4_linux_amd64.zip); fi
      - run: $HOME/consul_0.7.4/consul --version
      - run: $HOME/consul_0.7.4/consul agent -dev -log-level=warn &
      - run: conda env create -f conda_env_linux64.yml
      - run: conda init 
      - run: source /usr/share/miniconda/etc/profile.d/conda.sh
      - run: conda activate mi
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - run: psql -c "create role awips superuser createdb createrole inherit login password 'awips';" -h localhost -U postgres postgres
        env: 
          PGPASSWORD: postgres
      - run: psql -c 'create database metadata;' -h localhost -U postgres postgres
        env: 
          PGPASSWORD: postgres
      - run: psql -c 'grant all privileges on database metadata to awips;' -h localhost -U postgres postgres
        env: 
          PGPASSWORD: postgres
      - name: Install dependencies
        run: conda install --yes pandas nose yaml pyyaml ntplib mock gevent coverage requests numpy psycopg2 consul python-consul deprecated bs4 msgpack-python ion-functions scipy obspy pyzmq ooi_port_agent modestimage -c ooi -c defaults -c conda-forge
      - run: pip install apscheduler==2.1.2
      - name: Run tests
        run: nosetests -a UNIT --with-coverage --cover-package=mi
        env: 
          POSTGRES_DB: metadata
          POSTGRES_USER: awips
          POSTGRES_PASSWORD: awips
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432

